version: "3.9"

networks:
  backend:
    driver: bridge

volumes:
  auth_db_data:
  notif_db_data:

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:5672"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [backend]

  auth-db:
    image: postgres:16
    container_name: auth-db
    environment:
      POSTGRES_USER: ${AUTH_DB_USER}
      POSTGRES_PASSWORD: ${AUTH_DB_PASS}
      POSTGRES_DB: ${AUTH_DB_NAME}
    volumes:
      - auth_db_data:/var/lib/postgresql/data
      - ./db/auth-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${AUTH_DB_USER} -d ${AUTH_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [backend]

  notif-db:
    image: postgres:16
    container_name: notif-db
    environment:
      POSTGRES_USER: ${NOTIF_DB_USER}
      POSTGRES_PASSWORD: ${NOTIF_DB_PASS}
      POSTGRES_DB: ${NOTIF_DB_NAME}
    volumes:
      - notif_db_data:/var/lib/postgresql/data
      - ./db/notif-init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${NOTIF_DB_USER} -d ${NOTIF_DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks: [backend]

  pgadmin:
    image: dpage/pgadmin4:8.11
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      auth-db:
        condition: service_healthy
      notif-db:
        condition: service_healthy
    restart: unless-stopped
    networks: [backend]

  auth-app:
    build:
      context: ../Microservicios_2025-2
      dockerfile: Dockerfile
    container_name: auth-app
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-db:${AUTH_DB_PORT}/${AUTH_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${AUTH_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${AUTH_DB_PASS}

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}

      APP_JWT_SECRET: ${APP_JWT_SECRET}
      APP_JWT_MINUTES: ${APP_JWT_MINUTES}

      SERVER_PORT: ${AUTH_APP_PORT}
    depends_on:
      auth-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "${AUTH_APP_PORT}:${AUTH_APP_PORT}"
    restart: unless-stopped
    networks: [backend]

  orchestrator:
    build:
      context: ../Microservicios_Orquestador
      dockerfile: Dockerfile
    container_name: orchestrator
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}

      SERVER_PORT: ${ORCH_APP_PORT}
    depends_on:
      rabbitmq:
        condition: service_healthy
    ports:
      - "${ORCH_APP_PORT}:${ORCH_APP_PORT}"
    restart: unless-stopped
    networks: [backend]

  notification-service:
    build:
      context: ../notification_system
      dockerfile: Dockerfile
    container_name: notification-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://notif-db:${NOTIF_DB_PORT}/${NOTIF_DB_NAME}
      SPRING_DATASOURCE_USERNAME: ${NOTIF_DB_USER}
      SPRING_DATASOURCE_PASSWORD: ${NOTIF_DB_PASS}

      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: ${RABBITMQ_PORT}
      SPRING_RABBITMQ_USERNAME: ${RABBITMQ_DEFAULT_USER}
      SPRING_RABBITMQ_PASSWORD: ${RABBITMQ_DEFAULT_PASS}

      SERVER_PORT: ${NOTIF_APP_PORT}
    depends_on:
      notif-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "${NOTIF_APP_PORT}:${NOTIF_APP_PORT}"
    restart: unless-stopped
    networks: [backend]
