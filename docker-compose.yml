services:
  db:
    image: postgres:16
    environment:
      POSTGRES_USER: authuser
      POSTGRES_PASSWORD: authpass
      POSTGRES_DB: authdb
    ports: ["5432:5432"]
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authuser -d authdb"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./db/init:/docker-entrypoint-initdb.d:ro

  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"  # UI: http://localhost:15672 (guest/guest)
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  auth-app:
    build:
      context: ../Microservicios_2025-2
      dockerfile: Dockerfile
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/authdb
      SPRING_DATASOURCE_USERNAME: authuser
      SPRING_DATASOURCE_PASSWORD: authpass
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      APP_JWT_SECRET: change-me-super-secret
      APP_JWT_MINUTES: 60
      SERVER_PORT: 8080
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports: ["8080:8080"]

  notification-service:
    build:
      # Si tu Dockerfile está en la RAÍZ del repo de notificaciones (multi-módulo)
      context: ../notification_system
      dockerfile: Dockerfile
      # Si está dentro del submódulo, cambia context por ../notification_system/notification-service
    environment:
      SPRING_RABBITMQ_HOST: rabbitmq
      SPRING_RABBITMQ_PORT: 5672
      SPRING_RABBITMQ_USERNAME: guest
      SPRING_RABBITMQ_PASSWORD: guest

      # DB para notificaciones (usa la misma instancia pero otra base)
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/notifications
      SPRING_DATASOURCE_USERNAME: authuser
      SPRING_DATASOURCE_PASSWORD: authpass

      SERVER_PORT: 8081
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports: ["8081:8081"]
